# -*- coding: utf-8 -*-
"""Playstore Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ei_FiBOkyss3a4Ga5NYGfqXHJ9DXEjO1
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import warnings
warnings.filterwarnings("ignore")
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

df=pd.read_csv('/content/playstore-analysis Data Set.csv')
df

"""**1.a Drop rating**"""

df=df.dropna(subset=['Rating'])
df

"""**1.b check null value for Android Ver**"""

df[pd.isnull(df['Android Ver'])]

"""**1.b.i -**  all 3 have have different peoblem like as rating etc

**1.b.ii**
"""

df.drop([10472], inplace = True)
df

"""**1.b.iii**"""

df["Android Ver"].fillna(df['Android Ver'].mode()[0] ,inplace = True)
df

"""**1.c**"""

df['Current Ver'] = df['Current Ver'].fillna(df['Current Ver'].mode()[0])
df

"""**2.a** as per question reviews and install as in numeric vlue

**2.b**
"""

price=[]
for i in df['Price']:
  if i[0]=='$':
    price.append(i[1:])
  else:
    price.append(i)

df.drop(labels=df[df['Price']=='everyone'].index,inplace=True)
df['Price']=price
df['Price']=df['Price'].astype(float)

"""**2.c**"""

install = []                            
for i in df['Installs']:
    install.append(i.replace(',','').replace('+','').strip())

df['Installs']= install
df['Installs']= df['Installs'].astype(int)

"""**2.d**"""

#data type converted into float
df['Reviews'] = df['Reviews'].astype (float)

"""**3.a**"""

df.loc[df.Rating < 1] & df.loc[df.Rating > 5]

"""**3.b**"""

df.loc[df['Reviews'] > df['Installs']]

greater = df[df['Reviews']>df['Installs']].index                
df.drop(labels=greater, inplace=True)
df.loc[df['Reviews'] > df['Installs']]

"""**4.a.i**"""

ds=df[['Price']]
fig, ax = plt.subplots(figsize=(5,8))
df.boxplot(column=["Price"])

"""**4.a.ii**"""

df.loc[df['Price'] > 200.00]

"""**4.a.iii**"""

fig, ax = plt.subplots(figsize=(10,8))
df.boxplot(column=["Price"])

"""**4.a.iv**"""

df.drop( df[ df['Price'] >= 30.00 ].index , inplace=True)

"""**4.b.i**"""

sns.distplot(df['Reviews'])
plt.show()

"""**4.b.ii**"""

df.drop( df[ df['Reviews'] >= 1000000.00 ].index , inplace=True)

df.shape

"""**4.c.i**"""

df['Installs'].quantile(0.95)

"""**4.c.ii**"""

df.drop( df[ df['Installs'] >= 10000000.00 ].index , inplace=True)

df.shape

"""**5.a**"""

sns.distplot(df['Rating'])
plt.title("Rating Distribution")
plt.xlabel("Rating")
plt.ylabel("Frequency of Rating")
sns.distplot(df['Rating'].values);
plt.show()

"""**5.b**"""

df['Rating'].mode()

"""**6.a**"""

df['Content Rating'].value_counts()

"""**6.b**"""

data = []
for k in df['Content Rating']:
    data.append(k.replace('Adults only 18+','Null').replace('Unrated','Null'))
df['Content Rating']=data

data = df[df["Content Rating"] == 'Null'].index
df.drop(labels=data, inplace=True)

df['Content Rating'].value_counts()

#Replacing unwanted values 
# Droping the Null values.

"""**7.a**"""

sns.jointplot(df['Rating'],df['Size'])

"""**7.b** :-Yes we show the size and rating

**7.c**:-Size increase and Rating dec

**8.a**
"""

sns.distributions._has_statsmodels=False
sns.jointplot('Price','Rating', data=df ,kind='reg')

"""**8.b**:-Rating is contant

**8.c** :-very weak Positive correlation between Rating and Price.
"""

df.corr()

"""**8.d**"""

df=df.loc[df.Price>0]
sns.jointplot(x='Price', y='Rating', data=df, kind='reg')
plt.show()

"""**8.e** :-very weakly Negative Correlation between Price and Rating."""

df.corr()

"""**8.f** :-Generally increasing the Prices,meas it not signifcant effect on the  Rating

**9**
"""

sns.pairplot(df, vars=['Reviews', 'Size', 'Rating', 'Price'], kind='reg')
plt.show()

"""**10.a**"""

df.groupby(['Content Rating'])['Rating'].count().plot.bar()
plt.show()

"""**10.b**"""

plt.boxplot(df['Rating'])
plt.show()

"""**10.c**"""

df.groupby(['Content Rating'])['Rating'].median().plot.barh()
plt.show()

"""**11.a**"""

data=[0, 20000, 40000, 60000, 80000, 100000]
df['Bucket Size'] = pd.cut(df['Size'], data, labels=['0-20k','20k-40k','40k-60k','60k-80k','80k-100k'])
pd.pivot_table(df, values='Rating', index='Bucket Size', columns='Content Rating')

"""**11.b**"""

data=pd.pivot_table(df, values='Rating', index='Bucket Size', columns='Content Rating', aggfunc=lambda x:np.quantile(x,0.2))
data

"""**11.c.i**"""

f,ax = plt.subplots(figsize=(6, 6))
sns.heatmap(data, annot=True, linewidths=.5, fmt='.1f',ax=ax)
plt.show()

"""**11.c.ii**"""

f,ax = plt.subplots(figsize=(5, 5))
sns.heatmap(data, annot=True, linewidths=.5, cmap='Greens',fmt='.1f',ax=ax)
plt.show()

"""**11.d** :-  lighter apps are preferred"""